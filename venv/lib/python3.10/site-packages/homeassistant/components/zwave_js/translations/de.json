{
    "config": {
        "abort": {
            "addon_get_discovery_info_failed": "Z-Wave-JS-Add-on-Discovery-Informationen konnten nicht abgerufen werden.",
            "addon_info_failed": "Fehler beim Abrufen von Z-Wave JS Add-on Informationen.",
            "addon_install_failed": "Installation des Z-Wave JS Add-Ons fehlgeschlagen.",
            "addon_set_config_failed": "Setzen der Z-Wave JS Konfiguration fehlgeschlagen",
            "addon_start_failed": "Starten des Z-Wave JS Add-ons fehlgeschlagen.",
            "already_configured": "Ger\u00e4t ist bereits konfiguriert",
            "already_in_progress": "Der Konfigurationsablauf wird bereits ausgef\u00fchrt",
            "cannot_connect": "Verbindung fehlgeschlagen",
            "discovery_requires_supervisor": "Discovery erfordert den Supervisor.",
            "not_zwave_device": "Das erkannte Ger\u00e4t ist kein Z-Wave-Ger\u00e4t.",
            "not_zwave_js_addon": "Das entdeckte Add-on ist nicht das offizielle Z-Wave JS-Add-on."
        },
        "error": {
            "addon_start_failed": "Fehler beim Starten des Z-Wave JS Add-Ons. \u00dcberpr\u00fcfe die Konfiguration.",
            "cannot_connect": "Verbindung fehlgeschlagen",
            "invalid_ws_url": "Ung\u00fcltige Websocket-URL",
            "unknown": "Unerwarteter Fehler"
        },
        "flow_title": "{name}",
        "progress": {
            "install_addon": "Bitte warte, w\u00e4hrend die Installation des Z-Wave JS Add-ons abgeschlossen wird. Dies kann einige Minuten dauern.",
            "start_addon": "Bitte warte, w\u00e4hrend der Start des Z-Wave JS Add-ons abgeschlossen wird. Dies kann einige Sekunden dauern."
        },
        "step": {
            "configure_addon": {
                "data": {
                    "s0_legacy_key": "S0 Schl\u00fcssel (Legacy)",
                    "s2_access_control_key": "S2 Zugangskontrollschl\u00fcssel",
                    "s2_authenticated_key": "S2 Authentifizierter Schl\u00fcssel",
                    "s2_unauthenticated_key": "S2 Nicht authentifizierter Schl\u00fcssel",
                    "usb_path": "USB-Ger\u00e4te-Pfad"
                },
                "description": "Das Add-on generiert Sicherheitsschl\u00fcssel, wenn diese Felder leer gelassen werden.",
                "title": "Gib die Konfiguration des Z-Wave JS Add-ons ein"
            },
            "hassio_confirm": {
                "title": "Einrichten der Z-Wave JS Integration mit dem Z-Wave JS Add-on"
            },
            "install_addon": {
                "title": "Die Installation des Z-Wave-JS-Add-ons hat begonnen"
            },
            "manual": {
                "data": {
                    "url": "URL"
                }
            },
            "on_supervisor": {
                "data": {
                    "use_addon": "Verwende das Z-Wave JS Supervisor Add-on"
                },
                "description": "M\u00f6chtest du das Z-Wave JS Supervisor Add-on verwenden?",
                "title": "Verbindungstyp ausw\u00e4hlen"
            },
            "start_addon": {
                "title": "Z-Wave JS Add-on wird gestartet."
            },
            "usb_confirm": {
                "description": "M\u00f6chtest du {name} mit dem Z-Wave JS Add-on einrichten?"
            },
            "zeroconf_confirm": {
                "description": "M\u00f6chtest du den Z-Wave JS-Server mit der Home-ID {home_id}, gefunden unter {url}, zu Home Assistant hinzuf\u00fcgen?",
                "title": "Z-Wave JS-Server entdeckt"
            }
        }
    },
    "device_automation": {
        "action_type": {
            "clear_lock_usercode": "Nutzercode f\u00fcr {entity_name} l\u00f6schen",
            "ping": "Ger\u00e4t anpingen",
            "refresh_value": "Aktualisieren der Wert(e) f\u00fcr {entity_name}",
            "reset_meter": "Z\u00e4hler von {subtype} zur\u00fccksetzen",
            "set_config_parameter": "Wert des Konfigurationsparameters {subtype} festlegen",
            "set_lock_usercode": "Einen Nutzercode f\u00fcr {entity_name} festlegen",
            "set_value": "Wert eines Z-Wave-Werts einstellen"
        },
        "condition_type": {
            "config_parameter": "Wert des Konfigurationsparameters {subtype}",
            "node_status": "Status des Knotens",
            "value": "Aktueller Wert eines Z-Wave-Wertes"
        },
        "trigger_type": {
            "event.notification.entry_control": "Benachrichtigung zur Zugangskontrolle gesendet",
            "event.notification.notification": "Benachrichtigung gesendet",
            "event.value_notification.basic": "Grundlegendes CC-Ereignis auf {subtype}",
            "event.value_notification.central_scene": "Zentrale Szeneaktion auf {subtype}",
            "event.value_notification.scene_activation": "Szeneaktivierung auf {subtype}",
            "state.node_status": "Knotenstatus ge\u00e4ndert",
            "zwave_js.value_updated.config_parameter": "Wert\u00e4nderung des Konfigurationsparameters {subtype}",
            "zwave_js.value_updated.value": "Wert\u00e4nderung bei einem Z-Wave JS Wert"
        }
    },
    "issues": {
        "invalid_server_version": {
            "description": "Die Version des Z-Wave JS Servers, die du derzeit verwendest, ist zu alt f\u00fcr diese Version des Home Assistant. Bitte aktualisiere den Z-Wave JS Server auf die neueste Version, um dieses Problem zu beheben.",
            "title": "Neuere Version von Z-Wave JS Server erforderlich"
        }
    },
    "options": {
        "abort": {
            "addon_get_discovery_info_failed": "Z-Wave-JS-Add-on-Discovery-Informationen konnten nicht abgerufen werden.",
            "addon_info_failed": "Fehler beim Abrufen von Z-Wave JS Add-on Informationen.",
            "addon_install_failed": "Installation des Z-Wave JS Add-Ons fehlgeschlagen.",
            "addon_set_config_failed": "Setzen der Z-Wave JS Konfiguration fehlgeschlagen",
            "addon_start_failed": "Starten des Z-Wave JS Add-ons fehlgeschlagen.",
            "already_configured": "Ger\u00e4t ist bereits konfiguriert",
            "cannot_connect": "Verbindung fehlgeschlagen",
            "different_device": "Das angeschlossene USB-Ger\u00e4t ist nicht dasselbe, das zuvor f\u00fcr diesen Konfigurationseintrag konfiguriert wurde. Bitte erstelle stattdessen einen neuen Konfigurationseintrag f\u00fcr das neue Ger\u00e4t."
        },
        "error": {
            "cannot_connect": "Verbindung fehlgeschlagen",
            "invalid_ws_url": "Ung\u00fcltige Websocket-URL",
            "unknown": "Unerwarteter Fehler"
        },
        "progress": {
            "install_addon": "Bitte warte, w\u00e4hrend die Installation des Z-Wave JS Add-ons abgeschlossen wird. Dies kann einige Minuten dauern.",
            "start_addon": "Bitte warte, w\u00e4hrend der Start des Z-Wave JS Add-ons abgeschlossen wird. Dies kann einige Sekunden dauern."
        },
        "step": {
            "configure_addon": {
                "data": {
                    "emulate_hardware": "Hardware emulieren",
                    "log_level": "Protokollstufe",
                    "s0_legacy_key": "S0 Schl\u00fcssel (Legacy)",
                    "s2_access_control_key": "S2 Zugangskontrollschl\u00fcssel",
                    "s2_authenticated_key": "S2 Authentifizierter Schl\u00fcssel",
                    "s2_unauthenticated_key": "S2 Nicht authentifizierter Schl\u00fcssel",
                    "usb_path": "USB-Ger\u00e4te-Pfad"
                },
                "description": "Das Add-on generiert Sicherheitsschl\u00fcssel, wenn diese Felder leer gelassen werden.",
                "title": "Gib die Konfiguration des Z-Wave JS Add-ons ein"
            },
            "install_addon": {
                "title": "Die Installation des Z-Wave-JS-Add-ons hat begonnen"
            },
            "manual": {
                "data": {
                    "url": "URL"
                }
            },
            "on_supervisor": {
                "data": {
                    "use_addon": "Verwende das Z-Wave JS Supervisor Add-on"
                },
                "description": "M\u00f6chtest du das Z-Wave JS Supervisor Add-on verwenden?",
                "title": "Verbindungstyp ausw\u00e4hlen"
            },
            "start_addon": {
                "title": "Z-Wave JS Add-on wird gestartet."
            }
        }
    },
    "services": {
        "bulk_set_partial_config_parameters": {
            "description": "Erm\u00f6glicht die Masseneinstellung von Teilparametern. N\u00fctzlich, wenn mehrere Teilparameter gleichzeitig eingestellt werden m\u00fcssen.",
            "fields": {
                "endpoint": {
                    "description": "Der Endpunkt des Konfigurationsparameters.",
                    "name": "Endpunkt"
                },
                "parameter": {
                    "description": "Der Name (oder die ID) des Konfigurationsparameters, den du konfigurieren m\u00f6chtest.",
                    "name": "Parameter"
                },
                "value": {
                    "description": "Die neuen Werte, die f\u00fcr diesen Konfigurationsparameter festgelegt werden sollen. Kann entweder ein ganzzahliger Rohwert zur Darstellung der Massen\u00e4nderung oder eine Zuordnung sein, bei der der Schl\u00fcssel die Bitmaske (entweder in Hex- oder Ganzzahlform) und der Wert der neue Wert ist, den du f\u00fcr diesen Teilparameter festlegen m\u00f6chtest.",
                    "name": "Wert"
                }
            },
            "name": "Teilkonfigurationsparameter massenhaft festlegen (erweitert)."
        },
        "clear_lock_usercode": {
            "description": "L\u00f6scht einen Benutzercode aus einem Schloss.",
            "fields": {
                "code_slot": {
                    "description": "Code-Slot zum L\u00f6schen des Codes.",
                    "name": "Code-Slot"
                }
            },
            "name": "Benutzercode des Schlosses l\u00f6schen"
        },
        "invoke_cc_api": {
            "description": "Ruft eine Befehlsklassen-API auf einem Knoten auf. Einige Befehlsklassen k\u00f6nnen nicht vollst\u00e4ndig \u00fcber den Dienst \u201eset_value\u201c gesteuert werden und erfordern direkte Aufrufe der Befehlsklassen-API.",
            "fields": {
                "command_class": {
                    "description": "Die ID der Befehlsklasse, an die du einen Befehl erteilen m\u00f6chtest.",
                    "name": "Befehlsklasse"
                },
                "endpoint": {
                    "description": "Der Endpunkt, auf dem die API aufgerufen werden soll. Wenn ein Endpunkt angegeben ist, wird dieser Endpunkt f\u00fcr alle Knoten ausgew\u00e4hlt, die den Zielbereichen, Ger\u00e4ten und/oder Entit\u00e4ten zugeordnet sind. Wenn kein Endpunkt angegeben ist, wird der Stammendpunkt (0) als Ziel f\u00fcr Knoten verwendet, die Zielbereichen und -ger\u00e4ten zugeordnet sind, und der Endpunkt f\u00fcr den Prim\u00e4rwert jeder Entit\u00e4t wird als Ziel ausgew\u00e4hlt.",
                    "name": "Endpunkt"
                },
                "method_name": {
                    "description": "Der Name der aufzurufenden API-Methode. Informationen zu verf\u00fcgbaren Methoden findes du in der Z-Wave JS Command Class API-Dokumentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index).",
                    "name": "Methodenname"
                },
                "parameters": {
                    "description": "Eine Liste von Parametern, die an die API-Methode \u00fcbergeben werden sollen. Informationen zu Parametern findest du in der Z-Wave JS Command Class API-Dokumentation (https://zwave-js.github.io/node-zwave-js/#/api/CCs/index).",
                    "name": "Parameter"
                }
            },
            "name": "Aufrufen einer Befehlsklassen-API auf einem Knoten (erweitert)"
        },
        "multicast_set_value": {
            "description": "\u00c4ndert jeden Wert, den Z-Wave JS erkennt, auf mehreren Z-Wave-Ger\u00e4ten mithilfe von Multicast, sodass alle Ger\u00e4te die Nachricht gleichzeitig empfangen. Dieser Dienst verf\u00fcgt nur \u00fcber eine minimale Validierung. Nutze diesen Dienst also nur, wenn du wei\u00dft, was du tust.",
            "fields": {
                "broadcast": {
                    "description": "Ob der Befehl an alle Ger\u00e4te im Netzwerk gesendet werden soll.",
                    "name": "\u00dcbertragen?"
                },
                "command_class": {
                    "description": "Die ID der Befehlsklasse f\u00fcr den Wert.",
                    "name": "Befehlsklasse"
                },
                "endpoint": {
                    "description": "Der Endpunkt f\u00fcr den Wert.",
                    "name": "Endpunkt"
                },
                "options": {
                    "description": "Karte mit Wertoptionen festlegen. Weitere Informationen zu den einstellbaren Optionen findest du in der Z-Wave JS-Dokumentation.",
                    "name": "Optionen"
                },
                "property": {
                    "description": "Die ID der Eigenschaft f\u00fcr den Wert.",
                    "name": "Eigentum"
                },
                "property_key": {
                    "description": "Die ID des Eigenschaftsschl\u00fcssels f\u00fcr den Wert.",
                    "name": "Eigenschaftsschl\u00fcssel"
                },
                "value": {
                    "description": "Der neu zu setzende Wert.",
                    "name": "Wert"
                }
            },
            "name": "Einen Wert auf mehreren Ger\u00e4ten \u00fcber Multicast einstellen (erweitert)"
        },
        "ping": {
            "description": "Zwingt Z-Wave JS dazu, zu versuchen, einen Knoten zu erreichen. Dies kann verwendet werden, um den Status des Knotens in Z-Wave JS zu aktualisieren, wenn du der Meinung bist, dass er die Realit\u00e4t nicht genau widerspiegelt, z.B. um einen ausgefallenen/toten Knoten wiederzubeleben oder den Knoten als schlafend zu markieren.",
            "name": "Einen Knoten anpingen"
        },
        "refresh_value": {
            "description": "Erzwingt die Aktualisierung der Werte einer Z-Wave-Entit\u00e4t.",
            "fields": {
                "entity_id": {
                    "description": "Zu aktualisierende Entit\u00e4ten.",
                    "name": "Entit\u00e4ten"
                },
                "refresh_all_values": {
                    "description": "Ob alle Werte (true) oder nur der Prim\u00e4rwert (false) aktualisiert werden sollen.",
                    "name": "Alle Werte aktualisieren?"
                }
            },
            "name": "Werte aktualisieren"
        },
        "reset_meter": {
            "description": "Setzt die Z\u00e4hler auf einem Knoten zur\u00fcck.",
            "fields": {
                "meter_type": {
                    "description": "Der Typ des Z\u00e4hlers, der zur\u00fcckgesetzt werden soll. Nicht alle Messger\u00e4te unterst\u00fctzen die M\u00f6glichkeit, einen Messger\u00e4ttyp zum Zur\u00fccksetzen auszuw\u00e4hlen.",
                    "name": "Z\u00e4hlertyp"
                },
                "value": {
                    "description": "Der Wert, auf den die Z\u00e4hler zur\u00fcckgesetzt werden sollen. Nicht alle Messger\u00e4te unterst\u00fctzen die M\u00f6glichkeit, auf einen bestimmten Wert zur\u00fcckgesetzt zu werden.",
                    "name": "Zielwert"
                }
            },
            "name": "Z\u00e4hler auf einem Knoten zur\u00fccksetzen"
        },
        "set_config_parameter": {
            "description": "\u00c4ndert die Konfigurationsparameter deiner Z-Wave-Ger\u00e4te.",
            "fields": {
                "bitmask": {
                    "description": "Auf eine bestimmte Bitmaske abzielen (weitere Informationen findest du in der Dokumentation).",
                    "name": "Bitmaske"
                },
                "endpoint": {
                    "description": "Der Endpunkt des Konfigurationsparameters.",
                    "name": "Endpunkt"
                },
                "parameter": {
                    "description": "Der Name (oder die ID) des Konfigurationsparameters, den du konfigurieren m\u00f6chtest.",
                    "name": "Parameter"
                },
                "value": {
                    "description": "Der neue Wert, der f\u00fcr diesen Konfigurationsparameter festgelegt werden soll.",
                    "name": "Wert"
                }
            },
            "name": "Ger\u00e4tekonfigurationsparameter festlegen"
        },
        "set_lock_usercode": {
            "description": "Legt einen Benutzercode f\u00fcr ein Schloss fest.",
            "fields": {
                "code_slot": {
                    "description": "Code-Slot zum Einstellen des Codes.",
                    "name": "Code-Slot"
                },
                "usercode": {
                    "description": "Sperrcode zum Festlegen.",
                    "name": "Code"
                }
            },
            "name": "Lege den Benutzercode f\u00fcr das Schloss fest"
        },
        "set_value": {
            "description": "\u00c4ndert jeden Wert, den Z-Wave JS auf einem Z-Wave-Ger\u00e4t erkennt. Dieser Dienst verf\u00fcgt nur \u00fcber eine minimale Validierung. Nutze diesen Dienst also nur, wenn du wei\u00dft, was du tust.",
            "fields": {
                "command_class": {
                    "description": "Die ID der Befehlsklasse f\u00fcr den Wert.",
                    "name": "Befehlsklasse"
                },
                "endpoint": {
                    "description": "Der Endpunkt f\u00fcr den Wert.",
                    "name": "Endpunkt"
                },
                "options": {
                    "description": "Karte mit Wertoptionen festlegen. Weitere Informationen zu den einstellbaren Optionen findest du in der Z-Wave JS-Dokumentation.",
                    "name": "Optionen"
                },
                "property": {
                    "description": "Die ID der Eigenschaft f\u00fcr den Wert.",
                    "name": "Eigentum"
                },
                "property_key": {
                    "description": "Die ID des Eigenschaftsschl\u00fcssels f\u00fcr den Wert.",
                    "name": "Eigenschaftsschl\u00fcssel"
                },
                "value": {
                    "description": "Der neu zu setzende Wert.",
                    "name": "Wert"
                },
                "wait_for_result": {
                    "description": "Ob auf eine Antwort vom Knoten gewartet werden soll oder nicht. Wenn es nicht in der Nutzlast enthalten ist, entscheidet die Integration, ob gewartet wird oder nicht. Wenn der Wert auf \u201etrue\u201c gesetzt ist, beachte, dass der Serviceanruf eine Weile dauern kann, wenn ein Wert f\u00fcr ein Ger\u00e4t mit schlafender Batterie festgelegt wird.",
                    "name": "Auf Ergebnis warten?"
                }
            },
            "name": "Wert festlegen (erweitert)"
        }
    }
}
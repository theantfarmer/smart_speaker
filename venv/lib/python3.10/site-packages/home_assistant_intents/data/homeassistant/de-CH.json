{
  "language": "de-CH",
  "intents": {
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "(Schalt|Schaut|Mach) <name> <ab_us>"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fan",
          "requires_context": {
            "domain": "fan"
          }
        },
        {
          "sentences": [
            "(Schalt|Schaut|Schteu|Stell|Mach) (d'|d|alli|aui) Ventilatore <area> <ab_us>"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans_area"
        },
        {
          "sentences": [
            "(Schalt|Schaut|Mach) <name> <ab_us>"
          ],
          "excludes_context": {
            "domain": [
              "light",
              "fan",
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "(Schalt|Schaut|Mach) <Geräte> <area> <ab_us>"
          ],
          "excludes_context": {
            "domain": [
              "light",
              "fan",
              "cover"
            ]
          },
          "response": "default_area"
        },
        {
          "sentences": [
            "(Zünd|Mach|Lösch|Schalt|Schaut) [(<Liecht> |(d'[ ]|d |de |dr |der |die |ds |s ))]<name> <ab_us>"
          ],
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "domain": "light"
          },
          "response": "light"
        },
        {
          "sentences": [
            "(Zünd|Mach|Schalt|Schaut) (<Liecht>|<Liechter>) <ab_us> <area>",
            "(Zünd|Mach|Schalt|Schaut) (<Liecht>|<Liechter>) <area> <ab_us>",
            "(Zünd|Mach|Schalt|Schaut) <area> (<Liecht>|<Liechter>) [<ab_us>]",
            "Lösch <area> (<Liecht>|<Liechter>) [<ab_us>]",
            "Lösch (<Liecht>|<Liechter>) <area> [<ab_us>]",
            "Lösch (<Liecht>|<Liechter>) [<ab_us>] <area>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "<mach> <name> (zue|abe)"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<mach> <cover> <area> (zue|abe)"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_area"
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "Was isch der Status vo[(m|r)] <name> [<area>]"
          ],
          "response": "one",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "Isch [der Status] <name> {on_off_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover",
              "lock"
            ]
          }
        },
        {
          "sentences": [
            "Isch (e|ei) {on_off_domains:domain} {on_off_states:state} [<area>]",
            "Isch <area> (e|ei) {on_off_domains:domain} {on_off_states:state}"
          ],
          "response": "any",
          "excludes_context": {
            "domain": [
              "cover",
              "lock"
            ]
          }
        },
        {
          "sentences": [
            "Sy [d'[' ']|d |aui |alli ]{on_off_domains:domain} {on_off_states:state} [<area>]",
            "Sy [d'[' ']|d |aui |alli ]{on_off_domains:domain} [<area>] {on_off_states:state}",
            "Sy <area> [d'[' ']|d |aui |alli ]{on_off_domains:domain} {on_off_states:state}"
          ],
          "response": "all",
          "excludes_context": {
            "domain": [
              "cover",
              "lock"
            ]
          }
        },
        {
          "sentences": [
            "(Wele|Weli) {on_off_domains:domain} (isch|sy|si) {on_off_states:state} [<area>]",
            "(Wele|Weli) {on_off_domains:domain} <area> (isch|sy|si) {on_off_states:state}"
          ],
          "response": "which",
          "excludes_context": {
            "domain": [
              "cover",
              "lock"
            ]
          }
        },
        {
          "sentences": [
            "Wie mäng[s|e|i] {on_off_domains:domain} (isch|sy|si) {on_off_states:state} [<area>]",
            "Wie mäng[s|e|i] {on_off_domains:domain} <area> (isch|sy|si) {on_off_states:state}"
          ],
          "response": "how_many",
          "excludes_context": {
            "domain": [
              "cover",
              "lock"
            ]
          }
        },
        {
          "sentences": [
            "Was isch der Status vo[(m|r)] <name> [<area>]"
          ],
          "response": "one",
          "slots": {
            "domain": "cover"
          },
          "requires_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Isch [der Status] <name> {cover_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "slots": {
            "domain": "cover"
          },
          "requires_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Isch (e|ei|es) {cover_classes:device_class} {cover_states:state} [<area>]",
            "Isch (e|ei|es) {cover_classes:device_class} <area> {cover_states:state} ",
            "Isch <area> (e|ei|es) {cover_classes:device_class} {cover_states:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Sy [(d'[' ']|d |alli |aui )]{cover_classes:device_class} {cover_states:state} [<area>]",
            "Sy [(d'[' ']|d |alli |aui )]{cover_classes:device_class} <area> {cover_states:state}",
            "Sy <area> [(d'[' ']|d |alli |aui )]{cover_classes:device_class} {cover_states:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(Wele|weli) {cover_classes:device_class} (isch|sy|si) {cover_states:state} [<area>]",
            "(Wele|weli) {cover_classes:device_class} <area> (isch|sy|si) {cover_states:state}"
          ],
          "response": "which",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Wie mäng[s|e|i] {cover_classes:device_class} (isch|sy|si) {cover_states:state} [<area>]",
            "Wie mäng[s|e|i] {cover_classes:device_class} <area> (isch|sy|si) {cover_states:state}"
          ],
          "response": "how_many",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Isch <name> {lock_states:state} [<area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "lock"
          },
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Isch (e|es|ei) (Tür[e]|Tor|Schloss) {lock_states:state} [<area>]",
            "Isch [<area>] (e|es|ei) (Tür[e]|Tor|Schloss) {lock_states:state}"
          ],
          "response": "any",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Sy aui (Türe|Tor|Schlösser) {lock_states:state} [<area>]",
            "Sy aui (Türe|Tor|Schlösser) [<area>] {lock_states:state}",
            "Sy [<area>] aui (Türe|Tor|Schlösser) {lock_states:state}"
          ],
          "response": "all",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "(Weles|Weli) (Tür[e]|Tor|Schloss|Schlösser) (isch|sy|si) {lock_states:state} [<area>]",
            "(Weles|weli) (Tür[e]|Tor|Schloss|Schlösser) [<area>] (isch|sy|si) {lock_states:state}"
          ],
          "response": "which",
          "slots": {
            "domain": "lock"
          }
        },
        {
          "sentences": [
            "Wie mäng[s|i] (Tür[e]|Tor|Schloss|Schlösser) (isch|sy|si) {lock_states:state} [<area>]",
            "Wie mäng[s|i] (Tür[e]|Tor|Schloss|Schlösser) [<area>] (isch|sy|si) {lock_states:state}"
          ],
          "response": "how_many",
          "slots": {
            "domain": "lock"
          }
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "(Zünd|Mach|Schalt|Schaut) [(<Liecht> |(d'[ ]|d |de |dr |der |die |ds |s ))]<name> [<a_y>]"
          ],
          "slots": {
            "domain": "light"
          },
          "requires_context": {
            "domain": "light"
          },
          "response": "light"
        },
        {
          "sentences": [
            "(Zünd|Mach) (<Liecht>|<Liechter>) a <area>",
            "(Zünd|Mach) (<Liecht>|<Liechter>) <area> [a]",
            "(Zünd|Mach) <area> (<Liecht>|<Liechter>) a",
            "(Schalt|Schaut) (<Liecht>|<Liechter>) <a_y> <area>",
            "(Schalt|Schaut) (<Liecht>|<Liechter>) <area> <a_y>"
          ],
          "slots": {
            "domain": "light"
          },
          "response": "lights_area"
        },
        {
          "sentences": [
            "<mach> <name> (uf|uuf)"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover"
        },
        {
          "sentences": [
            "<mach> <cover> <area> (uf|uuf)"
          ],
          "slots": {
            "domain": "cover"
          },
          "response": "cover_area"
        },
        {
          "sentences": [
            "(Schalt|Schaut|Schteu|Stell|Mach) <name> <a_y>"
          ],
          "slots": {
            "domain": "fan"
          },
          "requires_context": {
            "domain": "fan"
          },
          "response": "fan"
        },
        {
          "sentences": [
            "(Schalt|Schaut|Schteu|Stell|Mach) (d'|d|alli|aui) Ventilatore <area> <a_y>"
          ],
          "slots": {
            "domain": "fan"
          },
          "response": "fans_area"
        },
        {
          "sentences": [
            "(Schalt|Schaut|Schteu|Stell|Mach) <name> <a_y>"
          ],
          "excludes_context": {
            "domain": [
              "light",
              "fan",
              "cover",
              "scene",
              "script"
            ]
          }
        },
        {
          "sentences": [
            "(Schalt|Schaut|Schteu|Stell|Mach) <Geräte> <area> <a_y>"
          ],
          "excludes_context": {
            "domain": [
              "light",
              "fan",
              "cover",
              "scene",
              "script"
            ]
          },
          "response": "default_area"
        },
        {
          "sentences": [
            "(Aktivier|Schalt|Schaut|Schteu|Stell|Mach) <name> [Szene] [<a_y>]",
            "(Aktivier|Schalt|Schaut|Schteu|Stell|Mach) [d[' '] Szene] <name> [<a_y>]"
          ],
          "requires_context": {
            "domain": "scene"
          },
          "slots": {
            "domain": "scene"
          },
          "response": "scene"
        },
        {
          "sentences": [
            "(Aktivier|Start|Schtart) <name> [Script]",
            "(Aktivier|Start|Schtart) [(ds Script|dr Code)] <name>"
          ],
          "requires_context": {
            "domain": "script"
          },
          "slots": {
            "domain": "script"
          },
          "response": "script"
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Tschuldigung, das han i nid verstande",
      "no_area": "S'git ke Bereich {{area}}",
      "no_domain": "Im Bereich {{area}} git's kes Grät vor Kategorie {{domain}}",
      "no_device_class": "Im Bereich {{area}} het's kes Grät vor Klass {{device_class}}",
      "no_entity": "Ds Grät {{entity}} gids nid",
      "handle_error": "Es isch en unerwartete Fähler ufträte bi de Verarbeitig vom Befäu."
    },
    "intents": {
      "HassGetState": {
        "one": "{{ slots.name }} isch {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\nJa, d {{ slots.name }} isch {{ state.state_with_unit }}\n{% else %}\nNei, {{ slots.name }} isch {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Ja, {{ match[:3] | join(\", \") }} und {{ (match | length - 3) }} angeri\n  {%- else -%}\n    Ja,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} und {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Nei\n{% endif %}\n",
        "all": "{% if not query.unmatched %}\n  Ja\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Nei, {{ no_match[:3] | join(\", \") }} u {{ (no_match | length - 3) }} angeri nid\n  {%- else -%}\n    Nei,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} u {% endif -%}\n      {{ name }} nid\n    {%- endfor %} nid\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Keis\n{% else %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} u {{ (match | length - 3) }} angeri\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} u {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n"
      },
      "HassTurnOff": {
        "default": "Ha {{slots.name}} abgsteut.",
        "default_area": "Ha d Grät in {{slots.area}} abgsteut.",
        "light": "Ha ds Liecht {{slots.name}} uusgschaute.",
        "lights_area": "Ha ds Liecht in {{slots.area}} uusgschaute.",
        "fan": "Ha der Ventilator {{slots.name}} uusgschaute.",
        "fans_area": "Ha d Ventilatore in {{slots.area}} abgsteut.",
        "cover": "Ha {{slots.name}} zuetaa.",
        "cover_area": "Ha aues in {{slots.area}} zuetaa."
      },
      "HassTurnOn": {
        "default": "Has {{slots.name}} igschaute.",
        "default_area": "Ha d Grät in {{slots.area}} igschaute.",
        "light": "Ha ds Liecht {{slots.name}} igschaute.",
        "lights_area": "Ha ds Liecht in {{slots.area}} igschaute.",
        "fan": "Ha der Ventilator {{slots.name}} igschaute.",
        "fans_area": "Ha d Ventilatore in {{slots.area}} igschaute.",
        "cover": "Ha {{slots.name}} uftaa.",
        "cover_area": "Ha aues im {{slots.area}} uftaa.",
        "script": "Ha ds Script {{slots.name}} gstartet.",
        "scene": "Ha d Szene {{slots.name}} aktiviert."
      }
    }
  },
  "lists": {
    "color": {
      "values": [
        {
          "in": "wyss",
          "out": "white"
        },
        {
          "in": "schwarz",
          "out": "black"
        },
        {
          "in": "rot",
          "out": "red"
        },
        {
          "in": "orange",
          "out": "orange"
        },
        {
          "in": "gelb",
          "out": "yellow"
        },
        {
          "in": "gälb",
          "out": "yellow"
        },
        {
          "in": "gäub",
          "out": "yellow"
        },
        {
          "in": "grüen",
          "out": "green"
        },
        {
          "in": "blau",
          "out": "blue"
        },
        {
          "in": "violett",
          "out": "purple"
        },
        {
          "in": "brun",
          "out": "brown"
        },
        {
          "in": "bruun",
          "out": "brown"
        }
      ]
    },
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "temperature_unit": {
      "values": [
        {
          "in": "(c|celsius)",
          "out": "Celsius"
        },
        {
          "in": "(f|fahrenheit)",
          "out": "Fahrenheit"
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "a",
          "out": "on"
        },
        {
          "in": "an",
          "out": "on"
        },
        {
          "in": "anne",
          "out": "on"
        },
        {
          "in": "ab",
          "out": "off"
        },
        {
          "in": "us",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "Lamp(e|ä)",
          "out": "light"
        },
        {
          "in": "Liecht[er]",
          "out": "light"
        },
        {
          "in": "Venti[lator[e]]",
          "out": "fan"
        },
        {
          "in": "Scha(u|l)ter",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "offe",
          "out": "open"
        },
        {
          "in": "zue",
          "out": "closed"
        },
        {
          "in": "am uftue",
          "out": "opening"
        },
        {
          "in": "am zuetue",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "Sunnes[ch]tore",
          "out": "awning"
        },
        {
          "in": "S[ch]tore",
          "out": "blind"
        },
        {
          "in": "Vorh(a|ä)ng",
          "out": "curtain"
        },
        {
          "in": "Tür[e]",
          "out": "door"
        },
        {
          "in": "Garagetor",
          "out": "garage"
        },
        {
          "in": "Tor",
          "out": "gate"
        },
        {
          "in": "shade[s]",
          "out": "shade"
        },
        {
          "in": "Fänschterlade",
          "out": "shutter"
        },
        {
          "in": "Fänschter",
          "out": "window"
        }
      ]
    },
    "lock_states": {
      "values": [
        {
          "in": "[(ab|zue)](gschlosse|bschlosse)",
          "out": "locked"
        },
        {
          "in": "((uf|und|nid )(gschlosse|bschlosse)|offe)",
          "out": "unlocked"
        }
      ]
    }
  },
  "expansion_rules": {
    "name": "[(d'[ ]|d |de |dr |der |die |ds |s )]{name}",
    "area": "[(idr|i dr|im|ir|ide|idä|i dä|i de|i dr|i der)] {area}",
    "a_y": "(a|aa|y|ii|ih)",
    "ab_us": "(ab|us|uus|uis)",
    "cover": "[(d'[' ']|d |alli |aui )]([Sunne]s[ch]tore|Vorhang|Vorhäng|Tür[e]|Tor|Abdeckig[e]|Fänschter[l(a|ä)de])",
    "what_is": "(was isch|wasch)",
    "brightness": "{brightness}[(%| %| Prozent)]",
    "temp": "{temperature} [Grad] [{temperature_unit}]",
    "schliessen": "(tue {name} (zue|abe)|mach {name} (zue|abe)|schliess {name})",
    "mach": "(mach|tue|la[s])",
    "Liechter": "([(d'[ ]|d |alli |aui )]Liechter|[(d'[ ]|d |alli |aui )]Lampä|[(d'[ ]|d |alli |aui )]Lampe|[(d'[ ]|d |alli |aui )]Lampäne)",
    "Liecht": "([(ds|s)] Liecht|[(d |d'[ ])]Lampe|[(d |d'[ ])]Lampä)",
    "Geräte": "([(d'[ ]|d |alli |aui )](Grät|Entitäte|Entitätä))"
  },
  "skip_words": [
    "bitte",
    "chönntisch",
    "chasch",
    "würdsch",
    "würdisch"
  ]
}